import n from"node:path";import{fileURLToPath as g}from"node:url";import f from"prompts";import{red as s,reset as l,gray as w}from"kolorist";import c from"node:fs";import k from"readline";const N=async()=>{const e=await c.readdirSync(n.join("templates"));return Promise.all(e.map(a=>new Promise(async t=>{const r=await S(n.join("templates",a,"README.md"));t({templateName:a,desc:r})})))},v=async e=>{await c.mkdirSync(e,{recursive:!0})},p=(e,a)=>{c.statSync(e).isDirectory()?D(e,a):c.copyFileSync(e,a)};function D(e,a){c.mkdirSync(a,{recursive:!0});for(const t of c.readdirSync(e)){const r=n.resolve(e,t),m=n.resolve(a,t);p(r,m)}}const j=({packageName:e})=>{console.log(e,"packageName")},P=e=>e?.trim().replace(/\/+$/g,""),S=async e=>new Promise(a=>{try{const t=k.createInterface({input:c.createReadStream(e),crlfDelay:1/0});t.on("line",r=>{t.close(),a(r)})}catch{s("\u83B7\u53D6\u6A21\u677Freadme\u6587\u4EF6\u5931\u8D25")}}),u="myApp";function h(e){return/^(?:@[a-z\d\-*~][a-z\d\-*._~]*\/)?[a-z\d\-~][a-z\d\-._~]*$/.test(e)}const F=async()=>{let e;const a=await N();try{e=await f([{type:"text",name:"projectName",message:l("Project name:"),initial:u},{type:"text",name:"packageName",message:l("Package name:"),validate:o=>h(o)||"Invalid package.json name",initial:u},{type:"select",name:"framework",message:"\u9009\u62E9\u6A21\u677F\uFF1A",initial:0,choices:a.map(o=>({title:`${o.templateName}(${w(o.desc)})`,value:o.templateName}))}],{onCancel:()=>{throw new Error(s("\u2716")+" Operation cancelled")}})}catch(o){console.log(o.message);return}const{framework:t,packageName:r,projectName:m}=e,y=process.cwd(),i=n.join(y,P(m));await v(i);const d=n.resolve(g(import.meta.url),"../templates",`${t}`);p(d,i),j({packageName:r})};F();
